This program should be regarded as a DEBUGGING aid, not as a 
certifier of correctness.
Call with the -l flag or read the license file for terms
and conditions of use.
Run this program with "-h" for the list of options.

Bugs, questions, and comments should be directed to
"murphi@verify.stanford.edu".

Murphi compiler last modified date: Jan 29 1999
Include files   last modified date: Jan 29 1999
==========================================================================

==========================================================================
Murphi Release 3.1
Finite-state Concurrent System Verifier.

Copyright (C) 1992 - 1999 by the Board of Trustees of
Leland Stanford Junior University.

==========================================================================

Protocol: msi_opt

Algorithm:
	Simulation.
Start Simulation :

Proc : 1, nextproc : 2
Proc : 2, nextproc : 3
Proc : 3, nextproc : 4
Proc : 4, nextproc : 5
Proc : 5, nextproc : 1
I ==(store)==> M Create Msg 0:: type: GetM, src: 5, dst: 8, ack_cnt: 0, src_state: Proc_IM_D, dst_state: Dir_I
I ==(store)==> M Create Msg 1:: type: GetM, src: 4, dst: 8, ack_cnt: 0, src_state: Proc_IM_D, dst_state: Dir_I
I ==(load)==> S Create Msg 2:: type: GetS, src: 3, dst: 8, ack_cnt: 0, src_state: Proc_IS_D, dst_state: Dir_I
I ==(load)==> S Create Msg 3:: type: GetS, src: 1, dst: 8, ack_cnt: 0, src_state: Proc_IS_D, dst_state: Dir_I
  Receive Msg 3:: type: GetS, src: 1, dst: 8, ack_cnt: 0, src_state: Proc_IS_D, dst_state: Dir_I
Receiving GetS from processor Proc_1 on RequestChannel at home -- HomeNode.state:Dir_I
 Create Msg 4:: type: Data, src: 8, dst: 1, ack_cnt: 0, src_state: Dir_S, dst_state: Proc_IS_D, val: 7
  Receive Msg 0:: type: GetM, src: 5, dst: 8, ack_cnt: 0, src_state: Proc_IM_D, dst_state: Dir_S
Receiving GetM from processor Proc_5 on RequestChannel at home -- HomeNode.state:Dir_S
 Create Msg 5:: type: Data, src: 8, dst: 5, ack_cnt: 1, src_state: Dir_SM_A, dst_state: Proc_IM_D, val: 7
I ==(load)==> S Create Msg 6:: type: GetS, src: 2, dst: 8, ack_cnt: 0, src_state: Proc_IS_D, dst_state: Dir_SM_A
  Receive Msg 2:: type: GetS, src: 3, dst: 8, ack_cnt: 0, src_state: Proc_IS_D, dst_state: Dir_SM_A
Receiving GetS from processor Proc_3 on RequestChannel at home -- HomeNode.state:Dir_SM_A
Receiving GetS from processor Proc_3 on RequestChannel at home -- HomeNode.state:Dir_SM_A
  Receive Msg 4:: type: Data, src: 8, dst: 1, ack_cnt: 0, src_state: Dir_SM_A, dst_state: Proc_IS_D, val: 7
Receiving Data from HomeDir on ResponseChannel at proc 1
S ==(store)==> M Create Msg 7:: type: GetM, src: 1, dst: 8, ack_cnt: 0, src_state: Proc_SM_D, dst_state: Dir_SM_A
  Receive Msg 5:: type: Data, src: 8, dst: 5, ack_cnt: 1, src_state: Dir_SM_A, dst_state: Proc_IM_D, val: 7
Receiving Data from HomeDir on ResponseChannel at proc 5
Receiving GetS from processor Proc_3 on RequestChannel at home -- HomeNode.state:Dir_SM_A
M ==(evict)==> I Create Msg 8:: type: PutM, src: 5, dst: 8, ack_cnt: 0, src_state: Proc_MI_A, dst_state: Dir_SM_A, val: 7
Receiving GetS from processor Proc_3 on RequestChannel at home -- HomeNode.state:Dir_SM_A

Status:

	13 rules fired in simulation in 0.10s.

Error:

	Deadlocked state found.

