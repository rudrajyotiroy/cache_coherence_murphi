This program should be regarded as a DEBUGGING aid, not as a 
certifier of correctness.
Call with the -l flag or read the license file for terms
and conditions of use.
Run this program with "-h" for the list of options.

Bugs, questions, and comments should be directed to
"murphi@verify.stanford.edu".

Murphi compiler last modified date: Jan 29 1999
Include files   last modified date: Jan 29 1999
==========================================================================

==========================================================================
Murphi Release 3.1
Finite-state Concurrent System Verifier.

Copyright (C) 1992 - 1999 by the Board of Trustees of
Leland Stanford Junior University.

==========================================================================

Protocol: msi

Algorithm:
	Verification by breadth first search.
	with symmetry algorithm 3 -- Heuristic Small Memory Normalization
	with permutation trial limit 10.

Memory usage:

	* The size of each state is 1568 bits (rounded up to 196 bytes).
	* The memory allocated for the hash table and state queue is
	  8 Mbytes.
	  With two words of overhead per state, the maximum size of
	  the state space is 39929 states.
	   * Use option "-k" or "-m" to increase this, if necessary.
	* Capacity in queue for breadth-first search: 3992 states.
	   * Change the constant gPercentActiveStates in mu_prolog.inc
	     to increase this, if necessary.

Warning: No trace will not be printed in the case of protocol errors!
         Check the options if you want to have error traces.
I ==(load)==> S Create Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(load)==> S Create Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_I
  Receive Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
I ==(load)==> S Create Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
I ==(load)==> S Create Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
I ==(load)==> S Create Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
I ==(load)==> S Create Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
  Receive Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
I ==(load)==> S Create Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
  Receive Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
I ==(load)==> S Create Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
  Receive Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
I ==(load)==> S Create Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(evict)==> I Create Msg :: type: PutS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
  Receive Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Inv, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, fwd_to: 2
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Inv, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, fwd_to: 2
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetS, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, fwd_to: 2
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetS, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, fwd_to: 2
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
I ==(load)==> S Create Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
M ==(evict)==> I Create Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetM, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, fwd_to: 2
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetM, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, fwd_to: 2
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetM, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, fwd_to: 2
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
I ==(load)==> S Create Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
M ==(evict)==> I Create Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetM, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, fwd_to: 2
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
S ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(evict)==> I Create Msg :: type: PutS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Inv, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_S, fwd_to: 2
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
S ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(evict)==> I Create Msg :: type: PutS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Inv, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_S, fwd_to: 2
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
S ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(evict)==> I Create Msg :: type: PutS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SM_AD, val: 3
I ==(load)==> S Create Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SM_AD, val: 3
I ==(load)==> S Create Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
  Receive Msg :: type: PutS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: PutAck, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SI_A
I ==(load)==> S Create Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: Inv, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, fwd_to: 1
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: Inv, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, fwd_to: 1
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: FwdGetS, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, fwd_to: 1
  Receive Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetS, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_M, fwd_to: 2
M ==(evict)==> I Create Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: FwdGetS, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, fwd_to: 1
  Receive Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetS, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_M, fwd_to: 2
M ==(evict)==> I Create Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetM, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_M, fwd_to: 2
M ==(evict)==> I Create Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetM, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_M, fwd_to: 2
M ==(evict)==> I Create Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
  Receive Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
 Create Msg :: type: PutAck, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_MI_A
I ==(load)==> S Create Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: FwdGetM, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, fwd_to: 1
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: FwdGetM, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, fwd_to: 1
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: FwdGetM, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, fwd_to: 1
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetM, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_M, fwd_to: 2
M ==(evict)==> I Create Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetM, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_M, fwd_to: 2
M ==(evict)==> I Create Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
  Receive Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
 Create Msg :: type: PutAck, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_MI_A
I ==(load)==> S Create Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: FwdGetM, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, fwd_to: 1
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
S ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(evict)==> I Create Msg :: type: PutS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
  Receive Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SM_AD, val: 3
  Receive Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SM_AD, val: 3
  Receive Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: PutS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: PutAck, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SI_A
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: Inv, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_S, fwd_to: 1
 Create Msg :: type: InvAck, src: 2, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD
 Create Msg :: type: InvAck, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_SM_A
S ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_SM_A
S ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_SM_A
S ==(evict)==> I Create Msg :: type: PutS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_SM_A
  Receive Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Inv, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SM_AD, fwd_to: 1
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SM_AD, val: 3
  Receive Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Inv, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SM_AD, fwd_to: 1
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SM_AD, val: 3
  Receive Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Inv, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SI_A, fwd_to: 1
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: PutS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: PutAck, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SI_A
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: Inv, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_S, fwd_to: 1
 Create Msg :: type: InvAck, src: 2, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD
 Create Msg :: type: InvAck, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_SM_A
S ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_SM_A
S ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_SM_A
S ==(evict)==> I Create Msg :: type: PutS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_SM_A
  Receive Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Inv, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SM_AD, fwd_to: 1
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SM_AD, val: 3
  Receive Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Inv, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SM_AD, fwd_to: 1
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SM_AD, val: 3
  Receive Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Inv, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SI_A, fwd_to: 1
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: PutS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: PutAck, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SI_A
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_SM_AD, val: 3
I ==(load)==> S Create Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_SM_AD, val: 3
I ==(load)==> S Create Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
I ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
  Receive Msg :: type: PutAck, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SI_A
I ==(load)==> S Create Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: Inv, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, fwd_to: 1
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: Inv, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, fwd_to: 1
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: FwdGetS, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_M, fwd_to: 2
 Create Msg :: type: FwdAck, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_MX_D, val: 3
 Create Msg :: type: Data, src: 1, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
M ==(evict)==> I Create Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_MX_D, val: 3
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetS, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_MI_A, fwd_to: 2
  Receive Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
 Create Msg :: type: PutAck, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_MI_A
  Receive Msg :: type: FwdGetS, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_M, fwd_to: 2
 Create Msg :: type: FwdAck, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_MX_D, val: 3
 Create Msg :: type: Data, src: 1, dst: 2, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
M ==(evict)==> I Create Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_MX_D, val: 3
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetS, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_MI_A, fwd_to: 2
  Receive Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
 Create Msg :: type: PutAck, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_MI_A
  Receive Msg :: type: FwdGetM, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_M, fwd_to: 1
 Create Msg :: type: Data, src: 2, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
 Create Msg :: type: FwdAck, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_MM_A
M ==(evict)==> I Create Msg :: type: PutM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_MM_A, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetM, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_MI_A, fwd_to: 2
  Receive Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
 Create Msg :: type: PutAck, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_MI_A
  Receive Msg :: type: FwdGetM, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_M, fwd_to: 1
 Create Msg :: type: Data, src: 2, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
 Create Msg :: type: FwdAck, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_MM_A
M ==(evict)==> I Create Msg :: type: PutM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_MM_A, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetM, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_MI_A, fwd_to: 2
  Receive Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
 Create Msg :: type: PutAck, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_MI_A
  Receive Msg :: type: PutAck, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_MI_A
I ==(load)==> S Create Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
I ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: FwdGetM, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_M, fwd_to: 1
 Create Msg :: type: Data, src: 2, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
 Create Msg :: type: FwdAck, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_MM_A
M ==(evict)==> I Create Msg :: type: PutM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_MM_A, val: 3
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetM, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_MI_A, fwd_to: 2
  Receive Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
 Create Msg :: type: PutAck, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_MI_A
  Receive Msg :: type: FwdGetM, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_M, fwd_to: 1
 Create Msg :: type: Data, src: 2, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
 Create Msg :: type: FwdAck, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_MM_A
M ==(evict)==> I Create Msg :: type: PutM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_MM_A, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetM, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_MI_A, fwd_to: 2
  Receive Msg :: type: PutM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_M, val: 3
 Create Msg :: type: PutAck, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_MI_A
  Receive Msg :: type: Data, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_IM_AD, val: 3
S ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(store)==> M Create Msg :: type: GetM, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(evict)==> I Create Msg :: type: PutS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_S
S ==(evict)==> I Create Msg :: type: PutS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Inv, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, fwd_to: 2
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 1, dst_state: Proc_SM_AD, val: 3
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: Inv, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, fwd_to: 2
 Create Msg :: type: Data, src: 5, dst: 2, ack_cnt: 1, dst_state: Proc_SM_AD, val: 3
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: PutS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_S
 Create Msg :: type: PutAck, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SI_A
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetS, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_SM_AD, fwd_to: 2
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_SM_AD, val: 3
  Receive Msg :: type: GetS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_M
 Create Msg :: type: FwdGetS, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_SM_AD, fwd_to: 2
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_SM_AD, val: 3
  Receive Msg :: type: GetS, src: 1, dst: 5, ack_cnt: 0, dst_state: Dir_I
 Create Msg :: type: Data, src: 5, dst: 1, ack_cnt: 0, dst_state: Proc_IS_D, val: 3
  Receive Msg :: type: PutAck, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_SI_A
  Receive Msg :: type: Inv, src: 5, dst: 2, ack_cnt: 0, dst_state: Proc_S, fwd_to: 1
 Create Msg :: type: InvAck, src: 2, dst: 1, ack_cnt: 0, dst_state: Proc_IM_A
 Create Msg :: type: InvAck, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_SM_A
S ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_SM_A
S ==(store)==> M Create Msg :: type: GetM, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_SM_A
S ==(evict)==> I Create Msg :: type: PutS, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_SM_A
  Receive Msg :: type: InvAck, src: 2, dst: 5, ack_cnt: 0, dst_state: Dir_SM_A
  Receive Msg :: type: Data, src: 5, dst: 1, ack_cnt: 1, dst_state: Proc_IM_AD, val: 3
  Receive Msg :: type: InvAck, src: 2, dst: 1, ack_cnt: 0, dst_state: Proc_IM_AD

==========================================================================

Result:

	Invariant "Proc ackcounts are negative" failed.

State Space Explored:

	152 states, 257 rules fired in 0.10s.

Analysis of State Space:

	There are rules that are never fired.
	If you are running with symmetry, this may be why.  Otherwise,
	please run this program with "-pr" for the rules information.
	The maximum size for the multiset "HomeNode.sharers" is: 2.
	The maximum size for the multiset "Net[HomeDir]" is: 2.
	The maximum size for the multiset "Net[Proc_1]" is: 2.
	The maximum size for the multiset "Net[Proc_2]" is: 2.
